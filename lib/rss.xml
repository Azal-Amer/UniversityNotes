<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Obsidian Vault]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://azalamer.com/UniversityNotes/</link><image><url>https://azalamer.com/UniversityNotes/lib/media/favicon.ico</url><title>Obsidian Vault</title><link>https://azalamer.com/UniversityNotes/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Tue, 15 Oct 2024 20:27:31 GMT</lastBuildDate><atom:link href="https://azalamer.com/UniversityNotes/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Tue, 15 Oct 2024 20:27:29 GMT</pubDate><copyright><![CDATA[Azal Amer]]></copyright><ttl>60</ttl><dc:creator>Azal Amer</dc:creator><item><title><![CDATA[Notes]]></title><description><![CDATA[ 
 <br>But# Overview<br><br>"Scott's travelling this week, sort of saving the world from AI, so I'm taking over"
- Nick Hunter Jones
<br>Feynman was the first guy to bring this up:<br>Say you wanted to simulate a quantum system, we know that <br><br>If I want to simulate this classically, I have to keep track of a lot of numbers. There's  's for n-qubit state. Pretty soon this scales up to the size of the observable universe.<br>
If I wanted to simulate 260 qubits, then it's , which is the number of atoms in the universe.<br>"If you want to simulate a quantum system, you should probably just use a quantum system."<br>The question, is can we then use a quantum system, to simulate a classical problem<br><br>Even if I can construct a quantum state where<br><br>This just collapses to a single output, since we have to make a measurement.<br>
Our only hope is to "choreograph an interference pattern".  <br><br>
<br>Just a a note,  is just some arbitrarily small coefficient. Can be polynomial or wtv.<br>
You want a way to make your incorrect answers have a very low probability, while your good solutions have a high one.
<br><br>But how do we build these unitaries? The key thing, is that these unitaries encode the program.<br>
We want to use k-level gates , things like 1 qubit gates or 2 qubit gates. This is just more practical cause it's easier to act on a few qubits at once, plus it's just modular.<br>
<br> is the space complexity, which is the number of qubits, similar to the number of bits
<br> is the number of gates in the circuit, or the depth
<br>How do we know it's possible to build n-qubit unitaries out of lower qubit gates?
What a great segway azal ðŸ’€, that's next!
<br><br><br>The fundamental question is, are there a set of gates which can be used to compose any ?<br>
<br>The analogous classical picture is building up any boolean function from  
<br>THIS makes sense from <a data-tooltip-position="top" aria-label="../../Miscillaneous/Tidbit Facts/Cook-Levin Theorem" data-href="../../Miscillaneous/Tidbit Facts/Cook-Levin Theorem" href="https://azalamer.com/UniversityNotes/Miscillaneous/Tidbit Facts/Cook-Levin Theorem" class="original-internal-link" target="_blank" rel="noopener" style="display: none;">Cook-Levin Theorem</a><a data-tooltip-position="top" aria-label="../../Miscillaneous/Tidbit Facts/Cook-Levin Theorem" data-href="../../Miscillaneous/Tidbit Facts/Cook-Levin Theorem" href="https://azalamer.com/UniversityNotes/school/miscillaneous/tidbit-facts/cook-levin-theorem.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener">Cook-Levin Theorem</a>, cause any algorithm maps to a boolean one, which then is represented with a series of gates. So then a SAT solver would eject solutions to an arbitrary algorithm.
<br>What then is our fundamental set for quantum?<br><br> is our gate set.  is the cardinality of the set.<br>For some gate set  to be universal, our arbitrary n-qubit unitary must be able to be implemented through any qubits  <br>Definition (Exact Universality).
A gate set  has exact universality, when any  unitary  on a qubit of size , can be produced by tensoring gates in the set together. 

<br>Theorem (The Standard Gate Set is Universal).
The gate set defined as . Note that  must be continuous, so since the cardinalities of the set must match, the set  must also be continuous. 
<br>
<br>Can find this in Nielsen and Chuang Quantum Computation and Quantum Information
<br>The issue with Exact Universality, is that it can be really difficult to construct every possible transformation on a qubit, while in a lab.<br>Can we find a universal gate set, which is approximately universal? <br><br>Definition ((Approximate) Universal Gate Set).
 A finite gate set  is approximately universal if for any , there exists  such that

For a smaller , you'd just apply more gates from the set arbitrarily.<br>
Where

That is to say, the error is smaller than our resolution of measurement.<br>
Shatton Infinity Norm, or the biggest eigenvalue in the operator.<br>
An example can be found in <a data-href="#^9dfc33" href="https://azalamer.com/UniversityNotes/#^9dfc33" class="original-internal-link" target="_blank" rel="noopener" style="display: none;">^9dfc33</a><a data-href="#^9dfc33" href="https://azalamer.com/UniversityNotes/#^9dfc33" class="internal-link mathLink-internal-link" target="_self" rel="noopener">Definition 1.14.4 (Clifford + T Gate set)</a><br>

<br>One possible such set is<br><br>Which is called the Clifford +T<br>Definition (Clifford + T Gate set).

This is an example of <a data-href="#^c11659" href="https://azalamer.com/UniversityNotes/#^c11659" class="original-internal-link" target="_blank" rel="noopener" style="display: none;">^c11659</a><a data-href="#^c11659" href="https://azalamer.com/UniversityNotes/#^c11659" class="internal-link mathLink-internal-link" target="_self" rel="noopener">Definition 1.14.3 ((Approximate) Universal Gate Set)</a><br>

<br>Definition (Clifford Gates and Clifford Group).
The set of all unitaries generated by <br>
All possible combinations of elements in the set, form the Clifford Group.<br>
This is NOT universal.<br>

<br>"This is because the rationals are dense in the reals, you can approximate any rational number"
- <a data-tooltip-position="top" aria-label="../../../Personal/People/Aravind Karthigeyan" data-href="../../../Personal/People/Aravind Karthigeyan" href="https://azalamer.com/UniversityNotes/Personal/People/Aravind Karthigeyan" class="original-internal-link" target="_blank" rel="noopener" style="display: none;">Aravind</a><a data-tooltip-position="top" aria-label="../../../Personal/People/Aravind Karthigeyan" data-href="../../../Personal/People/Aravind Karthigeyan" href="https://azalamer.com/UniversityNotes/personal/people/aravind-karthigeyan.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener">Aravind</a>
<br>Another (approximately) universal gate set<br><br>What is the  that defines this?<br>Non universal gate sets<br><br>Note that  is just rotation matrices, but it's a weaker version of universality called <a data-href="#^a54159" href="https://azalamer.com/UniversityNotes/#^a54159" class="original-internal-link" target="_blank" rel="noopener" style="display: none;">^a54159</a><a data-href="#^a54159" href="https://azalamer.com/UniversityNotes/#^a54159" class="internal-link mathLink-internal-link" target="_self" rel="noopener">Definition 1.14.6 (Encoded Universal)</a> <br>Definition (Encoded Universal).
Any given gate set , s.t you can simulate an arbitrary  qubit computation, with ancillas<br>

<br><br>What allows <a data-href="#^toffoliGates" href="https://azalamer.com/UniversityNotes/#^toffoliGates" class="original-internal-link" target="_blank" rel="noopener" style="display: none;">^toffoliGates</a><a data-href="#^toffoliGates" href="https://azalamer.com/UniversityNotes/#^toffoliGates" class="internal-link mathLink-internal-link" target="_self" rel="noopener">(1.14.1)</a>  to be universal, while <a data-href="#^dac7b9" href="https://azalamer.com/UniversityNotes/#^dac7b9" class="original-internal-link" target="_blank" rel="noopener" style="display: none;">^dac7b9</a><a data-href="#^dac7b9" href="https://azalamer.com/UniversityNotes/#^dac7b9" class="internal-link mathLink-internal-link" target="_self" rel="noopener">Definition 1.14.5 (Clifford Gates and Clifford Group)</a> isn't? The only difference is that you can control on an additional bit?
It's not uniquely obvious in the math, esp with the computational basis. It's one of those things you'll need to grind math out for.
<br>Theorem ((Gottosen, Knill) Simulating Clifford Gates is in ).
Any quantum circuit made from <a data-href="#^dac7b9" href="https://azalamer.com/UniversityNotes/#^dac7b9" class="original-internal-link" target="_blank" rel="noopener" style="display: none;">^dac7b9</a><a data-href="#^dac7b9" href="https://azalamer.com/UniversityNotes/#^dac7b9" class="internal-link mathLink-internal-link" target="_self" rel="noopener">Definition 1.14.5 (Clifford Gates and Clifford Group)</a> , is classically simulatable in <br>

<br>Proof of <a data-href="#^6dbb59" href="https://azalamer.com/UniversityNotes/#^6dbb59" class="original-internal-link" target="_blank" rel="noopener" style="display: none;">^6dbb59</a><a data-href="#^6dbb59" href="https://azalamer.com/UniversityNotes/#^6dbb59" class="internal-link mathLink-internal-link" target="_self" rel="noopener">Theorem 1.14.7 ((Gottosen, Knill) Simulating Clifford Gates is in )</a>. <br>Exercise (AT HOME:  Try and prove this, or at least read the proof).<br>â–¡]]></description><link>https://azalamer.com/UniversityNotes/school/qis/notes/1.14-computing-with-quantum-states.html</link><guid isPermaLink="false">School/QIS/Notes/1.14 Computing with Quantum States.md</guid><dc:creator><![CDATA[Azal Amer]]></dc:creator><pubDate>Tue, 15 Oct 2024 20:26:34 GMT</pubDate><enclosure url="https://azalamer.com/UniversityNotes/lib/media/agacageaaxkbaaibn2cowqktznykwjqkikcumsu9h9oraajgrjebovp5ra4ujxjbmw3oaqadagadeqadngq.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://azalamer.com/UniversityNotes/lib/media/agacageaaxkbaaibn2cowqktznykwjqkikcumsu9h9oraajgrjebovp5ra4ujxjbmw3oaqadagadeqadngq.jpg"&gt;&lt;/figure&gt;</content:encoded></item></channel></rss>