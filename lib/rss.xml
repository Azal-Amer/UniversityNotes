<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Obsidian Vault]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://azalamer.com/UniversityNotes/</link><image><url>https://azalamer.com/UniversityNotes/lib/media/favicon.ico</url><title>Obsidian Vault</title><link>https://azalamer.com/UniversityNotes/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Fri, 24 Jan 2025 03:50:30 GMT</lastBuildDate><atom:link href="https://azalamer.com/UniversityNotes/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Fri, 24 Jan 2025 03:50:25 GMT</pubDate><copyright><![CDATA[Azal Amer]]></copyright><ttl>60</ttl><dc:creator>Azal Amer</dc:creator><item><title><![CDATA[Overview]]></title><description><![CDATA[ 
 <br><br>Hey y'all! These are my notes from when I took the Quantum Information Science at UT with professor Scott Aaronson from '24-'25.<br>
The <a data-href="0.1 Class Overview" href="https://azalamer.com/UniversityNotes/0.1 Class Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">0.1 Class Overview</a><a data-href="0.1 Class Overview" href="https://azalamer.com/UniversityNotes/school/physics/qis/notes/0.1-class-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">0.1 Class Overview</a> contains a list of every theorem we learned in class, but due to an issue with my website publishing workflow the equations are broken on that page. They still exist in their original notes.<br><br><br><br>]]></description><link>https://azalamer.com/UniversityNotes/school/physics/qis/notes/游릴-overall-qis-class-notes-游릴.html</link><guid isPermaLink="false">School/Physics/QIS/Notes/游릴 Overall QIS Class Notes 游릴.md</guid><dc:creator><![CDATA[Azal Amer]]></dc:creator><pubDate>Fri, 24 Jan 2025 03:47:25 GMT</pubDate></item><item><title><![CDATA[Overview]]></title><description><![CDATA[ 
 <br><br>Hey y'all! These are my notes from when I took the Quantum Computing FRI Stream at UT from '23-'24. At the time I was still adjusting to typing my notes in real time so they might be a bit messy. If you have any corrections for them let me know, I hope they help!<br>
You can navigate them by unit using the table below. <br><br><br><br><br><br><br><br><br><br>]]></description><link>https://azalamer.com/UniversityNotes/school/physics/quantum-computing/semester-1/游릴-overall-quantum-computing-class-notes-游릴.html</link><guid isPermaLink="false">School/Physics/Quantum Computing/Semester 1/游릴 Overall Quantum Computing Class Notes 游릴.md</guid><dc:creator><![CDATA[Azal Amer]]></dc:creator><pubDate>Fri, 24 Jan 2025 03:47:41 GMT</pubDate></item><item><title><![CDATA[Outline 2025-01-23 21.04.17]]></title><description><![CDATA[ 
 
  
  
  
    
    
  
  The function looks at anygiven point on a grid, and generatesall possible points on the final set it needs to be added to]]></description><link>https://azalamer.com/UniversityNotes/supplemental-files/images/outline-2025-01-23-21.04.17.excalidraw.html</link><guid isPermaLink="false">Supplemental Files/images/Outline 2025-01-23 21.04.17.excalidraw.md</guid><dc:creator><![CDATA[Azal Amer]]></dc:creator><pubDate>Fri, 24 Jan 2025 03:07:36 GMT</pubDate></item><item><title><![CDATA[1.3 Introduction to Encryption]]></title><description><![CDATA[ 
 <br>Symmetric encryption: Keys need to be shared securely, can only be really secure when key length = message length, security os contingent on the key being secret and hard to get<br>
Asymmetric encryption: only you can open the message]]></description><link>https://azalamer.com/UniversityNotes/school/physics/quantum-computing/semester-1/1.3-introduction-to-encryption.html</link><guid isPermaLink="false">School/Physics/Quantum Computing/Semester 1/1.3 Introduction to Encryption.md</guid><dc:creator><![CDATA[Azal Amer]]></dc:creator><pubDate>Fri, 24 Jan 2025 00:57:32 GMT</pubDate></item><item><title><![CDATA[Exam 1 is Thursday]]></title><description><![CDATA[<a class="tag" href="https://azalamer.com/UniversityNotes/?query=tag:StudyingIdea" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#StudyingIdea</a> 
 <br><br>
<br>Don't worry about time pressure, philo "do poorly cause you don't know"

<br>Stick around for another hour post class to work on it, just skip math


<br>You can have your notes, canvas, google, etc. 

<br>No communication btwn each other, no GenAI, etc


<br>Just like, be honest with your stuff
<br>You can run VQEL to support findings! Running circuits on IBM, etc.

<br>Checking matrix math too
<br><a href="https://azalamer.com/UniversityNotes?query=tag:StudyingIdea" class="tag" target="_blank" rel="noopener nofollow">#StudyingIdea</a> Make some initial solving tools to check in advance<br>
- Expected value, takes input  and , along with some gate matrix , it would be cool to make a symbolic solver for this!
<br>We can use wolfram alpha, jupytr, etc. to check


<br><br><img alt="../../../../../Supplemental Files/images/Pasted image 20240227160047 1.png" src="https://azalamer.com/UniversityNotes/lib/media/pasted-image-20240227160047-1.png" style="width: 500px; max-width: 100%;"><br><br>Finding angles in Unitary matrix<br>
Strategy: List What you Know<br>
<br>Starting with  , find some unitary to get <br>
Can do a few different ways
<br>System of equations is the best general technique
<br>NOT gate with a negative?<br>
- Just by looking 

In the above, b and d can be anything as long as we fix <br>
Thus, our parameters would be 
<br>Since we have an option for what lambda should be, MAKE IT SIMPLE!
<br>Just working through this and grinding would do it
<br><br><img alt="../../../../../Supplemental Files/images/Pasted image 20240227161146 1.png" src="https://azalamer.com/UniversityNotes/lib/media/pasted-image-20240227161146-1.png" style="width: 500px; max-width: 100%;"><br>
<br>(A) is the only question asking us to multiply out the gates
<br>(B) we would just do 
<br>(C) We get the eigenvects from  and use that to make the unitary 

<br><a data-href="2.4 Quantum Observables#General Orthonormal Basis Measurements" href="https://azalamer.com/UniversityNotes/2.4 Quantum Observables#General Orthonormal Basis Measurements" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">2.4 Quantum Observables &gt; General Orthonormal Basis Measurements</a><a data-href="2.4 Quantum Observables#General Orthonormal Basis Measurements" href="https://azalamer.com/UniversityNotes/school/physics/quantum-computing/semester-1/2.4-quantum-observables.html#General_Orthonormal_Basis_Measurements" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">2.4 Quantum Observables &gt; General Orthonormal Basis Measurements</a>


<br>(D) Use above trick 
]]></description><link>https://azalamer.com/UniversityNotes/school/physics/quantum-computing/semester-1/5.2-exam-review-day!.html</link><guid isPermaLink="false">School/Physics/Quantum Computing/Semester 1/5.2 Exam Review day!.md</guid><dc:creator><![CDATA[Azal Amer]]></dc:creator><pubDate>Fri, 24 Jan 2025 00:57:21 GMT</pubDate><enclosure url="https://azalamer.com/UniversityNotes/lib/media/pasted-image-20240227160047-1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://azalamer.com/UniversityNotes/lib/media/pasted-image-20240227160047-1.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Overview]]></title><description><![CDATA[ 
 <br><br><br><br>Would aliens have known about Shor's algorithm?
QM let's us factor numbers, which is sick
<br>Shor's algorithm does something really unique, it can find the period of any black box function.<br><br>The first public key cryptography system<br>Definition (Diffe-Hellman System).

Alice chooses a HUGE random prime number ,and a number  from a value . She also sends <br>
Bob now sends back  
How can they generate a secret key?
Alice calculates

And Bob calculates

This is their shared secret key!
But what about Eve? Well Eve knows neither <br>
(Note the use of <a data-href="2.4 Shor's Algorithm#^9d499f" href="https://azalamer.com/UniversityNotes/2.4 Shor's Algorithm#^9d499f" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">2.4 Shor's Algorithm &gt; ^9d499f</a><a data-href="2.4 Shor's Algorithm#^9d499f" href="https://azalamer.com/UniversityNotes/school/qis/notes/2.4-shor's-algorithm.html#^9d499f" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">2.4 Shor's Algorithm &gt; Definition 2.4.3 (Modular Exponentiation Function)</a> )
<br>Definition (Discrete Logarithm).
Given  find  s.t . Below it's deno

Example

<br>The best known classical algorithm comes from the number field sieve. The runtime of this algorithm is <br>Any developments in better factoring or cryptography, is often met by improvements to discrete logarithms.<br>Definition ( Elliptic Curve Cryptography (CVV)).
An elliptic curve is the set of solutions to an equation in the form


Whenever you have an elliptic curve, you have some special points on it in a group. There's a fancy type of multiplication which takes two points in a group, and takes you to the result also on the curve.<br>
Given , an attacker wants to find those 3 points<br>
The fastest known discrete-log algorithms that we do know, have a complexity of 
<br>Theorem (Abelion Groups).
Any set field of numbers where

<br>Theorem (Kitaev 1995).
Shor's algorithm can tell you basically anything about Abilene group
<br>Simon's Algorithm's Abelian group is <br><br>Shor's<br><br><br>Why do we even want systems which use Abelion groups?
Constructing our groups so nicely, actually relied on being Abelion
<br>Exercise (AT HOME: Review this again. I think I'm a bit lost on what Abelion groups are).<br><br>The OTP is STILL SECURE!游꿀游꿀游꿀 游봅游봅<br>QKD is also still secure, since it <br>
<br>doesn't involve any computation.
<br>Private key cryptography also still works. That can be based on any one-way function. One-way functions can exist if pseudo-random-functions exist. Those take a number , and return a number so obfuscated no method can efficiently tell it wasn't random<br>It would be a hilarious result if quantum computers break all our existing cryptography, just to produce a system to fix it. Spread the disease and sell the cure.<br>Definition (Resistant Cryptography).
A whole field defined on post-quantum public key crypto systems.<br>
At UT,  Brent Waters is the leading expert
<br>The most promising forms of this are systems involving lattices, and LWE (learning with errors)<br>Definition (Lattice (Math)).
FUTURE AZAL: Make this much better

<br>Definition (Lattice Based Cryptography).

The idea, is that the public key is a "Bad basis", which can still help you generating those selected points. 
<br>Just in the last year, there was a paper which came very close to breaking lattice-based-cryptography. After the first week it was retracted over a bug.<br>If you can generalize Shor's algorithm from Abelian groups to non-abelian groups, then you can break lattice based cryptography.<br>If you can generalize Shor's algorithm to the dihedral group, then you can break lattice-based crypto.  If you can generalize it it to all possible groups, then it can solve the graph isomorphism problem  all in polynomial time.<br>Definition (Graph Isomorphism problem).
Given two graphs, is there a way of rearranging the vertices and renaming, in such a way to prove the graphs are isomorphic
<br>I never worked on this. It just looked like Vietnam, more and more troops sent in to no avail. <br>A common misinterpretation of Shor's algorithm, is that it just tests every superposition. Then whichever one has the answer just like, calls out?<br>
This isn't how Shor works, but it is how Grover's does!<br><br>Definition (Search Problem).
Given a function <br>
Decision Version:

Is there an  s.t  

Search Version (Promised at least 1  s.t ) : 

Find 

 is called a marked item<br>
A simple description, is I guarantee that there is treasure in one of  boxes, finding which box there's treasure in.
<br>If I solved the Search Version, I can solve decision by just knowing. The algorithm will just never find an entry so we know the decision version.<br>If I can efficiently solve the decision version, how can I use that to solve the search. Well just use binary search! Split boxes in half, ask if there's an item in first or second half. Keep shrinking divisions.<br>Classical Algorithms<br>
<br>Deterministic algorithms: Upper bound of complexity as . You just search every box
<br>Randomized Algorithm: Doesn't really improve things, with search 
<br><br>Theorem (Grover 1996: ).
There is an  query quantum algorithm for <a data-href="#^186cf5" href="https://azalamer.com/UniversityNotes/#^186cf5" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">^186cf5</a><a data-href="#^186cf5" href="https://azalamer.com/UniversityNotes/#^186cf5" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Definition 2.7.11 (Search Problem)</a>. The space complexity is  
<br>
<br>This is why quantum computers have a guaranteed  speedup! SAT solvers are just search problems.  <a data-tooltip-position="top" aria-label="../../Miscillaneous/Tidbit Facts/Satisfiability Problem" data-href="../../Miscillaneous/Tidbit Facts/Satisfiability Problem" href="https://azalamer.com/UniversityNotes/Miscillaneous/Tidbit Facts/Satisfiability Problem" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Satisfiability Problem</a><a data-tooltip-position="top" aria-label="../../Miscillaneous/Tidbit Facts/Satisfiability Problem" data-href="../../Miscillaneous/Tidbit Facts/Satisfiability Problem" href="https://azalamer.com/UniversityNotes/school/miscillaneous/tidbit-facts/satisfiability-problem.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Satisfiability Problem</a>
<br>Wait that's true right ^?
yep. Literally just tack it on there and you speed up by 
<br>Optimistically, with quantum error correction<br><br>Shor's algorithm has this problem too, but QC's still win with much lower values of <br><br><img alt="../../../Supplemental Files/images/Pasted image 20241114150353.png" src="https://azalamer.com/UniversityNotes/lib/media/pasted-image-20241114150353.png"><br>Assume:  is a power of 2<br>
Assume there's a unique marked item <br><br>After your first query, 's amplitude becomes flipped!  <br><br>Grover then designed the Grover Diffusion Operator , "Inversion about the Average"<br>Let's say that we had some amplitude on one component  and we wanted to map it to<br><br><br>In a matrix, this is represented by<br>Wit<br><br>Then, we just apply our  again, which flips, then our diffusion operator . We repeat that  times<br>]]></description><link>https://azalamer.com/UniversityNotes/school/qis/notes/2.7-what-else-can-shor-do,-and-grover.html</link><guid isPermaLink="false">School/QIS/Notes/2.7 What Else can Shor do, and Grover.md</guid><dc:creator><![CDATA[Azal Amer]]></dc:creator><pubDate>Thu, 14 Nov 2024 21:32:13 GMT</pubDate><enclosure url="https://azalamer.com/UniversityNotes/lib/media/pasted-image-20241114140228.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://azalamer.com/UniversityNotes/lib/media/pasted-image-20241114140228.png"&gt;&lt;/figure&gt;</content:encoded></item></channel></rss>